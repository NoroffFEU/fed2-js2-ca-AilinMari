(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))o(r);new MutationObserver(r=>{for(const s of r)if(s.type==="childList")for(const c of s.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&o(c)}).observe(document,{childList:!0,subtree:!0});function t(r){const s={};return r.integrity&&(s.integrity=r.integrity),r.referrerPolicy&&(s.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?s.credentials="include":r.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function o(r){if(r.ep)return;r.ep=!0;const s=t(r);fetch(r.href,s)}})();const a="3b4ae846-f7ea-4cc9-9520-37a13084592a",g="https://v2.api.noroff.dev",w=`${g}/auth/login`,L=`${g}/auth/register`,l=`${g}/social/posts`,i=`${g}/social/profiles`;class _ extends Error{constructor(e){super(e),this.name="AuthError"}}class E{async _request(e,t,o){try{const r=await fetch(e,t);if(!r.ok){const s=await r.text();throw new Error(`${o}. Status: ${r.status}. Details: ${s}`)}return await r.json()}catch(r){throw console.error("Request error:",r),r}}_getRequiredAccessToken(){const e=localStorage.getItem("token");if(!e)throw new _("User is not logged in");return console.log("Access Token:",e),e}async getUserProfile(e){try{const t=this._getRequiredAccessToken(),o=new URL(`${i}/${e}`);o.searchParams.append("_followers","true"),o.searchParams.append("_following","true"),o.searchParams.append("_posts","true"),o.searchParams.append("_author","true"),o.searchParams.append("_avatar","true");const r={method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${t}`,"X-Noroff-API-Key":`${a}`}};return console.log("username",e),await this._request(o.toString(),r,"Error creating ")}catch(t){throw console.error(t),t}}async getUserProfileByAuthor(e){try{if(!e)throw new Error("Author parameter is missing.");const t=new URL(`${i}/${e}`);t.searchParams.append("_followers","true"),t.searchParams.append("_following","true"),t.searchParams.append("_posts","true"),t.searchParams.append("_author","true"),t.searchParams.append("_avatar","true");const o={method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this._getRequiredAccessToken()}`,"X-Noroff-API-Key":`${a}`}};return console.log("Fetching profile for author:",e),await this._request(t.toString(),o,"Error fetching user profile")}catch(t){throw console.error("Error in getUserProfileByauthor:",t),t}}async getAllPostsByAuthor(e){try{if(!e)throw new Error("Author parameter is missing.");const t=new URL(`${i}/${e}/posts`);t.searchParams.append("_author","true"),t.searchParams.append("_media","true"),t.searchParams.append("_tags","true"),t.searchParams.append("_body","true"),t.searchParams.append("_title","true");const o={method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this._getRequiredAccessToken()}`,"X-Noroff-API-Key":`${a}`}};return console.log("Fetching posts by author:",e),await this._request(t.toString(),o,"Error fetching user posts")}catch(t){throw console.error("Error in getAllPostsByAuthor:",t),t}}async getPostsByLoggedInUser(){const e=this._getRequiredAccessToken(),t=localStorage.getItem("name"),o=new URL(`${i}/${t}/posts`),r={method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${e}`,"X-Noroff-API-Key":`${a}`}};return console.log("Fetching posts by username:",t),await this._request(o.toString(),r,"Error fetching user posts")}async getAllPosts(){const t={method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this._getRequiredAccessToken()}`,"X-Noroff-API-Key":`${a}`}},{data:o}=await this._request(l+"?_author=true",t,"Error fetching blogposts");return o}async getPostById(e){try{const t=this._getRequiredAccessToken(),o=new URL(`${l}/${e}`);o.searchParams.append("_author","true");const r={method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${t}`,"X-Noroff-API-Key":`${a}`}};return await this._request(o.toString(),r,"Error creating blog post")}catch(t){throw console.error(t),t}}async createPost(e,t,o,r){const c={method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this._getRequiredAccessToken()}`,"X-Noroff-API-Key":`${a}`},body:JSON.stringify({title:e,body:t,tags:o,media:r})};return await this._request(l,c,"Error creating blog post")}async updatePost(e,t,o,r,s){const c=this._getRequiredAccessToken(),P={title:t,body:o,tags:r,media:s},$={method:"PUT",headers:{"Content-Type":"application/json",Authorization:`Bearer ${c}`,"X-Noroff-API-Key":`${a}`},body:JSON.stringify(P)};return await this._request(`${l}/${e}`,$,"Error updating post")}async deletePost(e){const o={method:"DELETE",headers:{Authorization:`Bearer ${this._getRequiredAccessToken()}`,"X-Noroff-API-Key":`${a}`}};try{const r=await fetch(`${l}/${e}`,o);if(!r.ok){const s="Failed to delete post";throw new Error(`${s}. Status: ${r.status}`)}return}catch(r){throw r}}async login(e,t){const o={email:e,password:t},r={method:"POST",headers:{"Content-Type":"application/json",accept:"application/json","X-Noroff-API-Key":`${a}`},body:JSON.stringify(o)},{data:s}=await this._request(w,r,"Login failed");return localStorage.setItem("name",s.name),localStorage.setItem("avatar",s.avatar.url),s}async updateUserProfile(e){const t=localStorage.getItem("name"),o=`${i}/${t}`,r=this._getRequiredAccessToken();e.avatar&&typeof e.avatar=="string"&&(e.avatar={url:e.avatar}),e.banner&&typeof e.banner=="string"&&(e.banner={url:e.banner});const s={method:"PUT",headers:{"Content-Type":"application/json",Authorization:`Bearer ${r}`,"X-Noroff-API-Key":`${a}`},body:JSON.stringify(e)};return await this._request(o,s,"Error updating user profile")}async followUser(e){const t=`${i}/${e}/follow`,r={method:"PUT",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this._getRequiredAccessToken()}`,"X-Noroff-API-Key":`${a}`}};return await this._request(t,r,"Error following user")}async unfollowUser(e){const t=`${i}/${e}/unfollow`,r={method:"PUT",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this._getRequiredAccessToken()}`,"X-Noroff-API-Key":a}};return await this._request(t,r,"Error unfollowing user")}async searchPosts(e){try{const t=this._getRequiredAccessToken(),o=new URL(`${l}/search`);o.searchParams.append("q",e);const r={method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${t}`,"X-Noroff-API-Key":`${a}`}};return console.log("Searching posts with query:",e),await this._request(o.toString(),r,"Error searching posts")}catch(t){throw console.error("Error in searchPosts:",t),t}}}const k=new E,T=localStorage.getItem("token"),p=document.querySelector("a[href='/auth/login/']"),d=document.querySelector("a[href='/auth/register/']");T?(p&&(p.style.display="none"),d&&(d.style.display="none")):(p&&(p.style.display="block"),d&&(d.style.display="block"));const m=document.querySelector("#user-links");T?m.style.display="block":m.style.display="none";const u=document.getElementById("search"),I=document.getElementById("search-button"),h=document.getElementById("search-results"),S=document.querySelector(".searchbar");let f=!1,y=!1;async function A(){if(!y){u.classList.remove("hidden"),u.focus(),y=!0;return}const n=u.value.trim();if(f){h.innerHTML="",f=!1;return}if(!n){alert("Please enter a search term.");return}try{const t=(await k.searchPosts(n)).data;q(t),f=!0}catch(e){console.error("Error searching for posts:",e),h.innerHTML="<p>No posts found</p>",f=!1}}function q(n){if(h.innerHTML="",n.length===0){h.innerHTML="<p>No posts found.</p>";return}n.forEach(e=>{const t=document.createElement("a");t.classList.add("post-card"),t.href=`../../post/?id=${e.id}`,t.innerHTML=`
      <img src="${e.media.url}" alt="${e.media.alt||`${e.title}'s image`}" class="post-image" />
      <h4>${e.title}</h4>
    `,h.appendChild(t)})}I.addEventListener("click",A);u.addEventListener("keydown",n=>{n.key==="Enter"&&A()});document.addEventListener("click",n=>{S.contains(n.target)||(u.classList.add("hidden"),y=!1)});document.addEventListener("DOMContentLoaded",()=>{const n=document.querySelector("#logout");n&&n.addEventListener("click",()=>{try{localStorage.removeItem("token"),localStorage.removeItem("name"),localStorage.removeItem("accessToken"),localStorage.removeItem("result"),localStorage.removeItem("apiKey"),localStorage.removeItem("avatar"),window.location.href="/auth/login/"}catch(e){console.error("Error during logout:",e.message)}})});export{L as A,E as S};
